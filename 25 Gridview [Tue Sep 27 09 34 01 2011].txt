Using a Gridview ...

<asp:GridView runat="server" id="grdAccountManager" borderwidth="1" 
        AutoGenerateColumns="False" Width="50%">
  <Columns>
  <asp:BoundField HeaderText="Account ID"           DataField="AccountId"     Visible='true'/>
  <asp:BoundField HeaderText="Account Name"         DataField="FriendlyName"  Visible='false' />
  <asp:BoundField HeaderText="Account Number"       DataField="AccountNumber" Visible='false' />
  <asp:BoundField HeaderText="Account Name(Number)" DataField="AccountName"   Visible="true"/>
  <asp:BoundField HeaderText="Status"               DataField="Status"        Visible='true'/>
  <asp:BoundField HeaderText="Add Date"             DataField="AddDate"       Visible='true'/>
  <asp:ButtonField Text="Edit" CommandName="EditAccount"/>
      <asp:TemplateField ShowHeader="False">
          <ItemTemplate>
              <asp:LinkButton ID="LinkButton1" runat="server" CausesValidation="false" 
                  CommandName="DeleteAccount" Text="Delete"
                  CommandArgument="<%# CType(Container, GridViewRow).RowIndex %>" />
                  
          </ItemTemplate>
      </asp:TemplateField>
  </Columns>
</asp:GridView>

... notes:
CommandArgument="<%# CType(Container, GridViewRow).RowIndex %>" /> is necessary to let us get the index.

... CodeBehind :

Protected Sub grdAccountManager_RowCommand(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCommandEventArgs) Handles grdAccountManager.RowCommand

        If e.CommandName = "EditAccount" Then
            Dim index As Integer = Convert.ToInt32(e.CommandArgument)
            EditAccount(index)
            Exit Sub
        End If
        If e.CommandName = "DeleteAccount" Then
            Dim index As Integer = Convert.ToInt32(e.CommandArgument)
            DeleteAccount(index)
            Exit Sub

        End If

    End Sub

